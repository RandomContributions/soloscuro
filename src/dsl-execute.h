#ifndef DSL_EXECUTE_H
#define DSL_EXECUTE_H

#include <stdint.h>

void dsl_execute_subroutine(const int file, const int addr, const int is_mas);
void dsl_execute_init();
void dsl_select_menu(int option);
int32_t data_field(int16_t header, uint16_t fi);

/* All the DSL functions */
void dsl_zero(void);
void dsl_long_divide_equal(void);
void dsl_byte_dec(void);
void dsl_word_dec(void);
void dsl_long_dec(void);
void dsl_byte_inc(void);
void dsl_word_inc(void);
void dsl_long_inc(void);
void dsl_hunt(void);
void dsl_getxy(void);
void dsl_string_copy(void);
void dsl_p_damage(void);
void dsl_changemoney(void);
void dsl_setvar(void);
void dsl_toggle_accum(void);
void dsl_getstatus(void);
void dsl_getlos(void);
void dsl_long_times_equal(void);
void dsl_jump(void);
void dsl_local_sub(void);
void dsl_global_sub(void);
void dsl_local_ret(void);
void dsl_load_variable(void);
void dsl_compare(void);
void dsl_load_accum(void);
void dsl_global_ret(void);
void dsl_nextto(void);
void dsl_inloscheck(void);
void dsl_notinloscheck(void);
void dsl_clear_los(void);
void dsl_nametonum(void);
void dsl_numtoname(void);
void dsl_bitsnoop(void);
void dsl_award(void);
void dsl_request(void);
void dsl_source_trace(void);
void dsl_shop(void);
void dsl_clone(void);
void dsl_default(void);
void dsl_ifis(void);
void dsl_trace_var(void);
void dsl_orelse(void);
void dsl_clearpic(void);
void dsl_continue(void);
void dsl_log(void);
void dsl_damage(void);
void dsl_source_line_num(void);
void dsl_drop(void);
void dsl_passtime(void);
void dsl_exit_dsl(void);
void dsl_fetch(void);
void dsl_search(void);
void dsl_getparty(void);
void dsl_fight(void);
void dsl_flee(void);
void dsl_follow(void);
void dsl_getyn(void);
void dsl_give(void);
void dsl_go(void);
void dsl_input_bignum(void);
void dsl_goxy(void);
void dsl_readorders(void);
void dsl_if(void);
void dsl_else(void);
void dsl_setrecord(void);
void dsl_setother(void);
void dsl_input_string(void);
void dsl_input_number(void);
void dsl_input_money(void);
void dsl_joinparty(void);
void dsl_leaveparty(void);
void dsl_lockdoor(void);
void dsl_menu(void);
void dsl_setthing(void);
//void dsl_default(void);
void dsl_local_sub_trace(void);
//void dsl_default(void);
//void dsl_default(void);
//void dsl_default(void);
void dsl_print_string(void);
void dsl_print_number(void);
void dsl_printnl(void);
void dsl_rand(void);
//void dsl_default(void);
void dsl_showpic(void);
//void dsl_default(void);
//void dsl_default(void);
//void dsl_default(void);
void dsl_skillroll(void);
void dsl_statroll(void);
void dsl_string_compare(void);
void dsl_match_string(void);
void dsl_take(void);
void dsl_sound(void);
void dsl_tport(void);
void dsl_music(void);
//void dsl_default(void);
void dsl_cmpend(void);
void dsl_wait(void);
void dsl_while(void);
void dsl_wend(void);
void dsl_attackcheck(void);
void dsl_lookcheck(void);
void dsl_endif(void);
void dsl_move_tilecheck(void);
void dsl_door_tilecheck(void);
void dsl_move_boxcheck(void);
void dsl_door_boxcheck(void);
void dsl_pickup_itemcheck(void);
void dsl_usecheck(void);
void dsl_talktocheck(void);
void dsl_noorderscheck(void);
void dsl_usewithcheck(void);
//void dsl_default(void);
//void dsl_default(void);
//void dsl_default(void);
//void dsl_default(void);
//void dsl_default(void);
void dsl_byte_plus_equal(void);
void dsl_byte_minus_equal(void);
void dsl_byte_times_equal(void);
void dsl_byte_divide_equal(void);
void dsl_word_plus_equal(void);
void dsl_word_minus_equal(void);
void dsl_word_times_equal(void);
void dsl_word_divide_equal(void);
void dsl_long_plus_equal(void);
void dsl_long_minus_equal(void);
void dsl_get_range(void);

#define DSL_MAX_COMMANDS (0x81)

#endif
